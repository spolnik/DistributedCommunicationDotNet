// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `message.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace IceCompactId
{
}

namespace NProgDistributed
{
    namespace TheIce
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        public partial class MessageDto : Ice.ObjectImpl
        {
            #region Slice data members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public string body;

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public string messageType;

            #endregion

            #region Constructors

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public MessageDto()
            {
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public MessageDto(string body, string messageType)
            {
                this.body = body;
                this.messageType = messageType;
            }

            #endregion

            #region Slice type-related members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public static new readonly string[] ids__ = 
            {
                "::Ice::Object",
                "::NProgDistributed::TheIce::MessageDto"
            };

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public override bool ice_isA(string s)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public override bool ice_isA(string s, Ice.Current current__)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public override string[] ice_ids()
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public override string[] ice_ids(Ice.Current current__)
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public override string ice_id()
            {
                return ids__[1];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public override string ice_id(Ice.Current current__)
            {
                return ids__[1];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            public static new string ice_staticId()
            {
                return ids__[1];
            }

            #endregion

            #region Operation dispatch

            #endregion

            #region Marshaling support

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            protected override void writeImpl__(IceInternal.BasicStream os__)
            {
                os__.startWriteSlice(ice_staticId(), -1, true);
                os__.writeString(body);
                os__.writeString(messageType);
                os__.endWriteSlice();
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
            protected override void readImpl__(IceInternal.BasicStream is__)
            {
                is__.startReadSlice();
                body = is__.readString();
                messageType = is__.readString();
                is__.endReadSlice();
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        public partial interface IMessageService : Ice.Object, IMessageServiceOperations_, IMessageServiceOperationsNC_
        {
        }
    }
}

namespace NProgDistributed
{
    namespace TheIce
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
        public delegate void Callback_IMessageService_Send(NProgDistributed.TheIce.MessageDto ret__);
    }
}

namespace NProgDistributed
{
    namespace TheIce
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
        public interface IMessageDtoPrx : Ice.ObjectPrx
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
        public interface IMessageServicePrx : Ice.ObjectPrx
        {
            NProgDistributed.TheIce.MessageDto Send(NProgDistributed.TheIce.MessageDto message);
            NProgDistributed.TheIce.MessageDto Send(NProgDistributed.TheIce.MessageDto message, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<NProgDistributed.TheIce.Callback_IMessageService_Send> begin_Send(NProgDistributed.TheIce.MessageDto message);
            Ice.AsyncResult<NProgDistributed.TheIce.Callback_IMessageService_Send> begin_Send(NProgDistributed.TheIce.MessageDto message, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_Send(NProgDistributed.TheIce.MessageDto message, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_Send(NProgDistributed.TheIce.MessageDto message, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            NProgDistributed.TheIce.MessageDto end_Send(Ice.AsyncResult r__);
        }
    }
}

namespace NProgDistributed
{
    namespace TheIce
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
        public interface IMessageServiceOperations_
        {
            NProgDistributed.TheIce.MessageDto Send(NProgDistributed.TheIce.MessageDto message, Ice.Current current__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
        public interface IMessageServiceOperationsNC_
        {
            NProgDistributed.TheIce.MessageDto Send(NProgDistributed.TheIce.MessageDto message);
        }
    }
}

namespace NProgDistributed
{
    namespace TheIce
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
        public sealed class MessageDtoPrxHelper : Ice.ObjectPrxHelperBase, IMessageDtoPrx
        {
            #region Asynchronous operations

            #endregion

            #region Checked and unchecked cast operations

            public static IMessageDtoPrx checkedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                IMessageDtoPrx r = b as IMessageDtoPrx;
                if((r == null) && b.ice_isA(ice_staticId()))
                {
                    MessageDtoPrxHelper h = new MessageDtoPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static IMessageDtoPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                IMessageDtoPrx r = b as IMessageDtoPrx;
                if((r == null) && b.ice_isA(ice_staticId(), ctx))
                {
                    MessageDtoPrxHelper h = new MessageDtoPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static IMessageDtoPrx checkedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId()))
                    {
                        MessageDtoPrxHelper h = new MessageDtoPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static IMessageDtoPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId(), ctx))
                    {
                        MessageDtoPrxHelper h = new MessageDtoPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static IMessageDtoPrx uncheckedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                IMessageDtoPrx r = b as IMessageDtoPrx;
                if(r == null)
                {
                    MessageDtoPrxHelper h = new MessageDtoPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static IMessageDtoPrx uncheckedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                MessageDtoPrxHelper h = new MessageDtoPrxHelper();
                h.copyFrom__(bb);
                return h;
            }

            public static readonly string[] ids__ =
            {
                "::Ice::Object",
                "::NProgDistributed::TheIce::MessageDto"
            };

            public static string ice_staticId()
            {
                return ids__[1];
            }

            #endregion

            #region Marshaling support

            protected override Ice.ObjectDelM_ createDelegateM__()
            {
                return new MessageDtoDelM_();
            }

            protected override Ice.ObjectDelD_ createDelegateD__()
            {
                return new MessageDtoDelD_();
            }

            public static void write__(IceInternal.BasicStream os__, IMessageDtoPrx v__)
            {
                os__.writeProxy(v__);
            }

            public static IMessageDtoPrx read__(IceInternal.BasicStream is__)
            {
                Ice.ObjectPrx proxy = is__.readProxy();
                if(proxy != null)
                {
                    MessageDtoPrxHelper result = new MessageDtoPrxHelper();
                    result.copyFrom__(proxy);
                    return result;
                }
                return null;
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
        public sealed class IMessageServicePrxHelper : Ice.ObjectPrxHelperBase, IMessageServicePrx
        {
            #region Synchronous operations

            public NProgDistributed.TheIce.MessageDto Send(NProgDistributed.TheIce.MessageDto message)
            {
                return Send(message, null, false);
            }

            public NProgDistributed.TheIce.MessageDto Send(NProgDistributed.TheIce.MessageDto message, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return Send(message, context__, true);
            }

            private NProgDistributed.TheIce.MessageDto Send(NProgDistributed.TheIce.MessageDto message, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
            {
                if(explicitContext__ && context__ == null)
                {
                    context__ = emptyContext_;
                }
                Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __Send_name, context__);
                int cnt__ = 0;
                try
                {
                    while(true)
                    {
                        Ice.ObjectDel_ delBase__ = null;
                        try
                        {
                            checkTwowayOnly__(__Send_name);
                            delBase__ = getDelegate__(false);
                            IMessageServiceDel_ del__ = (IMessageServiceDel_)delBase__;
                            return del__.Send(message, context__, observer__);
                        }
                        catch(IceInternal.LocalExceptionWrapper ex__)
                        {
                            handleExceptionWrapper__(delBase__, ex__, observer__);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            handleException__(delBase__, ex__, true, ref cnt__, observer__);
                        }
                    }
                }
                finally
                {
                    if(observer__ != null)
                    {
                        observer__.detach();
                    }
                }
            }

            #endregion

            #region Asynchronous operations

            public Ice.AsyncResult<NProgDistributed.TheIce.Callback_IMessageService_Send> begin_Send(NProgDistributed.TheIce.MessageDto message)
            {
                return begin_Send(message, null, false, null, null);
            }

            public Ice.AsyncResult<NProgDistributed.TheIce.Callback_IMessageService_Send> begin_Send(NProgDistributed.TheIce.MessageDto message, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_Send(message, ctx__, true, null, null);
            }

            public Ice.AsyncResult begin_Send(NProgDistributed.TheIce.MessageDto message, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_Send(message, null, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_Send(NProgDistributed.TheIce.MessageDto message, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_Send(message, ctx__, true, cb__, cookie__);
            }

            private const string __Send_name = "Send";

            public NProgDistributed.TheIce.MessageDto end_Send(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                IceInternal.OutgoingAsync.check__(outAsync__, this, __Send_name);
                bool ok__ = outAsync__.wait__();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            outAsync__.throwUserException__();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    NProgDistributed.TheIce.MessageDto ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                    IceInternal.ParamPatcher<NProgDistributed.TheIce.MessageDto> ret__PP = new IceInternal.ParamPatcher<NProgDistributed.TheIce.MessageDto>(NProgDistributed.TheIce.MessageDto.ice_staticId());
                    is__.readObject(ret__PP);
                    is__.readPendingObjects();
                    outAsync__.endReadParams__();
                    ret__ = ret__PP.value;
                    return ret__;
                }
                catch(Ice.LocalException ex)
                {
                    Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                    if(obsv__ != null)
                    {
                        obsv__.failed(ex.ice_name());
                    }
                    throw ex;
                }
            }

            private Ice.AsyncResult<NProgDistributed.TheIce.Callback_IMessageService_Send> begin_Send(NProgDistributed.TheIce.MessageDto message, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__Send_name);
                IceInternal.TwowayOutgoingAsync<NProgDistributed.TheIce.Callback_IMessageService_Send> result__ =  new IceInternal.TwowayOutgoingAsync<NProgDistributed.TheIce.Callback_IMessageService_Send>(this, __Send_name, Send_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare__(__Send_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                    IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                    os__.writeObject(message);
                    os__.writePendingObjects();
                    result__.endWriteParams__();
                    result__.send__(true);
                }
                catch(Ice.LocalException ex__)
                {
                    result__.exceptionAsync__(ex__);
                }
                return result__;
            }

            private void Send_completed__(Ice.AsyncResult r__, NProgDistributed.TheIce.Callback_IMessageService_Send cb__, Ice.ExceptionCallback excb__)
            {
                NProgDistributed.TheIce.MessageDto ret__;
                try
                {
                    ret__ = end_Send(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            #endregion

            #region Checked and unchecked cast operations

            public static IMessageServicePrx checkedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                IMessageServicePrx r = b as IMessageServicePrx;
                if((r == null) && b.ice_isA(ice_staticId()))
                {
                    IMessageServicePrxHelper h = new IMessageServicePrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static IMessageServicePrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                IMessageServicePrx r = b as IMessageServicePrx;
                if((r == null) && b.ice_isA(ice_staticId(), ctx))
                {
                    IMessageServicePrxHelper h = new IMessageServicePrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static IMessageServicePrx checkedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId()))
                    {
                        IMessageServicePrxHelper h = new IMessageServicePrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static IMessageServicePrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId(), ctx))
                    {
                        IMessageServicePrxHelper h = new IMessageServicePrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static IMessageServicePrx uncheckedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                IMessageServicePrx r = b as IMessageServicePrx;
                if(r == null)
                {
                    IMessageServicePrxHelper h = new IMessageServicePrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static IMessageServicePrx uncheckedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                IMessageServicePrxHelper h = new IMessageServicePrxHelper();
                h.copyFrom__(bb);
                return h;
            }

            public static readonly string[] ids__ =
            {
                "::Ice::Object",
                "::NProgDistributed::TheIce::IMessageService"
            };

            public static string ice_staticId()
            {
                return ids__[1];
            }

            #endregion

            #region Marshaling support

            protected override Ice.ObjectDelM_ createDelegateM__()
            {
                return new IMessageServiceDelM_();
            }

            protected override Ice.ObjectDelD_ createDelegateD__()
            {
                return new IMessageServiceDelD_();
            }

            public static void write__(IceInternal.BasicStream os__, IMessageServicePrx v__)
            {
                os__.writeProxy(v__);
            }

            public static IMessageServicePrx read__(IceInternal.BasicStream is__)
            {
                Ice.ObjectPrx proxy = is__.readProxy();
                if(proxy != null)
                {
                    IMessageServicePrxHelper result = new IMessageServicePrxHelper();
                    result.copyFrom__(proxy);
                    return result;
                }
                return null;
            }

            #endregion
        }
    }
}

namespace NProgDistributed
{
    namespace TheIce
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
        public interface IMessageDtoDel : Ice.ObjectDel_
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
        public interface IMessageServiceDel_ : Ice.ObjectDel_
        {
            NProgDistributed.TheIce.MessageDto Send(NProgDistributed.TheIce.MessageDto message, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);
        }
    }
}

namespace NProgDistributed
{
    namespace TheIce
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
        public sealed class MessageDtoDelM_ : Ice.ObjectDelM_, IMessageDtoDel
        {
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
        public sealed class IMessageServiceDelM_ : Ice.ObjectDelM_, IMessageServiceDel_
        {
            public NProgDistributed.TheIce.MessageDto Send(NProgDistributed.TheIce.MessageDto message, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
            {
                IceInternal.Outgoing og__ = handler__.getOutgoing("Send", Ice.OperationMode.Normal, context__, observer__);
                try
                {
                    try
                    {
                        IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                        os__.writeObject(message);
                        os__.writePendingObjects();
                        og__.endWriteParams();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        og__.abort(ex__);
                    }
                    bool ok__ = og__.invoke();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        IceInternal.BasicStream is__ = og__.startReadParams();
                        NProgDistributed.TheIce.MessageDto ret__;
                        IceInternal.ParamPatcher<NProgDistributed.TheIce.MessageDto> ret__PP = new IceInternal.ParamPatcher<NProgDistributed.TheIce.MessageDto>(NProgDistributed.TheIce.MessageDto.ice_staticId());
                        is__.readObject(ret__PP);
                        is__.readPendingObjects();
                        og__.endReadParams();
                        ret__ = ret__PP.value;
                        return ret__;
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
                finally
                {
                    handler__.reclaimOutgoing(og__);
                }
            }
        }
    }
}

namespace NProgDistributed
{
    namespace TheIce
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
        public sealed class MessageDtoDelD_ : Ice.ObjectDelD_, IMessageDtoDel
        {
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
        public sealed class IMessageServiceDelD_ : Ice.ObjectDelD_, IMessageServiceDel_
        {
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
            public NProgDistributed.TheIce.MessageDto Send(NProgDistributed.TheIce.MessageDto message, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
            {
                Ice.Current current__ = new Ice.Current();
                initCurrent__(ref current__, "Send", Ice.OperationMode.Normal, context__);
                NProgDistributed.TheIce.MessageDto result__ = null;
                IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                {
                    IMessageService servant__ = null;
                    try
                    {
                        servant__ = (IMessageService)obj__;
                    }
                    catch(_System.InvalidCastException)
                    {
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }
                    result__ = servant__.Send(message, current__);
                    return Ice.DispatchStatus.DispatchOK;
                };
                IceInternal.Direct direct__ = null;
                try
                {
                    direct__ = new IceInternal.Direct(current__, run__);
                    try
                    {
                        Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                        _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                    }
                    finally
                    {
                        direct__.destroy();
                    }
                }
                catch(Ice.SystemException)
                {
                    throw;
                }
                catch(_System.Exception ex__)
                {
                    IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                }
                return result__;
            }
        }
    }
}

namespace NProgDistributed
{
    namespace TheIce
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
        public abstract class IMessageServiceDisp_ : Ice.ObjectImpl, IMessageService
        {
            #region Slice operations

            public NProgDistributed.TheIce.MessageDto Send(NProgDistributed.TheIce.MessageDto message)
            {
                return Send(message, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract NProgDistributed.TheIce.MessageDto Send(NProgDistributed.TheIce.MessageDto message, Ice.Current current__);

            #endregion

            #region Slice type-related members

            public static new readonly string[] ids__ = 
            {
                "::Ice::Object",
                "::NProgDistributed::TheIce::IMessageService"
            };

            public override bool ice_isA(string s)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            public override bool ice_isA(string s, Ice.Current current__)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            public override string[] ice_ids()
            {
                return ids__;
            }

            public override string[] ice_ids(Ice.Current current__)
            {
                return ids__;
            }

            public override string ice_id()
            {
                return ids__[1];
            }

            public override string ice_id(Ice.Current current__)
            {
                return ids__[1];
            }

            public static new string ice_staticId()
            {
                return ids__[1];
            }

            #endregion

            #region Operation dispatch

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus Send___(IMessageService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                IceInternal.ParamPatcher<NProgDistributed.TheIce.MessageDto> message__PP = new IceInternal.ParamPatcher<NProgDistributed.TheIce.MessageDto>(NProgDistributed.TheIce.MessageDto.ice_staticId());
                is__.readObject(message__PP);
                is__.readPendingObjects();
                inS__.endReadParams();
                NProgDistributed.TheIce.MessageDto ret__ = obj__.Send(message__PP.value, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeObject(ret__);
                os__.writePendingObjects();
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            private static string[] all__ =
            {
                "Send",
                "ice_id",
                "ice_ids",
                "ice_isA",
                "ice_ping"
            };

            public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
            {
                int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                if(pos < 0)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }

                switch(pos)
                {
                    case 0:
                    {
                        return Send___(this, inS__, current__);
                    }
                    case 1:
                    {
                        return ice_id___(this, inS__, current__);
                    }
                    case 2:
                    {
                        return ice_ids___(this, inS__, current__);
                    }
                    case 3:
                    {
                        return ice_isA___(this, inS__, current__);
                    }
                    case 4:
                    {
                        return ice_ping___(this, inS__, current__);
                    }
                }

                _System.Diagnostics.Debug.Assert(false);
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            #endregion

            #region Marshaling support

            protected override void writeImpl__(IceInternal.BasicStream os__)
            {
                os__.startWriteSlice(ice_staticId(), -1, true);
                os__.endWriteSlice();
            }

            protected override void readImpl__(IceInternal.BasicStream is__)
            {
                is__.startReadSlice();
                is__.endReadSlice();
            }

            #endregion
        }
    }
}
